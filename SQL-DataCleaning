  SELECT * 
  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	

  -- standardize date format

  SELECT SaleDate, CONVERT(Date, SaleDate)
  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	

  ALTER TABLE NashvilleHousing
  Add SaleDateConverted Date;

  UPDATE NashvilleHousing
  SET SaleDateConverted = CONVERT(Date,SaleDate)

  -- Populate Property Address data where NULL

  SELECT * 
  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	
  --WHERE PropertyAddress is null
  ORDER BY ParcelID

  SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	 a
  JOIN PortfolioProjectNashHousing.dbo.NashvilleHousing	 b
		on a.ParcelID = b.ParcelID
		AND a.[UniqueID ] <> b.[UniqueID ]
  Where a.PropertyAddress is null

  Update a
  SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	 a
  JOIN PortfolioProjectNashHousing.dbo.NashvilleHousing	 b
		on a.ParcelID = b.ParcelID
		AND a.[UniqueID ] <> b.[UniqueID ]
  Where a.PropertyAddress is null


  -- breaking full address into address, city, state

  SELECT PropertyAddress
  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	


  SELECT 
  SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) - 1) as Address
  ,SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1, LEN(PropertyAddress)) as Address

  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	

  ALTER TABLE PortfolioProjectNashHousing.dbo.NashvilleHousing	
  Add PropertySplitAddress Nvarchar(255);

  UPDATE PortfolioProjectNashHousing.dbo.NashvilleHousing	
  SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) - 1)

  ALTER TABLE PortfolioProjectNashHousing.dbo.NashvilleHousing	
  Add PropertySplitCity Nvarchar(255);

  UPDATE PortfolioProjectNashHousing.dbo.NashvilleHousing	
  SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1, LEN(PropertyAddress))

  -- check my work
   SELECT *
  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	

  --alternative way of separating PropertyAddress
  SELECT 
  PARSENAME(REPLACE(OwnerAddress,',','.'),1)
  FROM  PortfolioProjectNashHousing.dbo.NashvilleHousing	

  ALTER TABLE PortfolioProjectNashHousing.dbo.NashvilleHousing	
  Add PropertySplitState Nvarchar(255);

  UPDATE PortfolioProjectNashHousing.dbo.NashvilleHousing	
  SET PropertySplitState = PARSENAME(REPLACE(OwnerAddress,',','.'),1)

  --change y and n to yes and no in Sold as Vacant field to standardize data(far more yes and no than y and n in the data)

  SELECT Distinct(SoldAsVacant), Count(SoldAsVacant)
  FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	
  Group By SoldAsVacant
  order by 2

  Select SoldAsVacant
  ,CASE When SoldAsVacant = 'Y' THEN 'Yes'
		When SoldAsVacant = 'N' THEN 'No'
		ELSE SoldAsVacant
		END
   FROM PortfolioProjectNashHousing.dbo.NashvilleHousing	

   Update PortfolioProjectNashHousing.dbo.NashvilleHousing	
   SET SoldAsVacant =
		CASE When SoldAsVacant = 'Y' THEN 'Yes'
			 When SoldAsVacant = 'N' THEN 'No'
			 ELSE SoldAsVacant
			 END

-- remove duplicates (never delete raw data. make a copy of data first)
-- have to use a cte to use a where clause
WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() Over(
	Partition BY ParcelID,
				PropertyAddress,
				SalePrice,
				SaleDate,
				LegalReference
				ORDER BY 
					UniqueID
					) row_num
FROM PortfolioProjectNashHousing.dbo.NashvilleHousing
)
DELETE
FROM RowNumCTE
WHERE row_num > 1


-- Delete unused columns

Select * 
From PortfolioProjectNashHousing.dbo.NashvilleHousing

ALTER TABLE PortfolioProjectNashHousing.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

ALTER TABLE PortfolioProjectNashHousing.dbo.NashvilleHousing
DROP COLUMN SaleDate
